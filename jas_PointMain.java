// A program that deals with points.// Final version with encapsulation and multiple constructorspublic class jas_PointMain{   public static void main(String[] args)   {       // create point objects: p1(7, 2), p2(-4, -3), and p3(-5, 1) originally      jas_Point p1 = new jas_Point(7,2);      jas_Point p2 = new jas_Point(-4,-3);      jas_Point p3 = new jas_Point(-5,1);                         // print each point and its distance from the origin       System.out.println("Point 1: " + p1.toString()+". Point 1 distance from origin: "+p1.distanceFromOrigin());       System.out.println("Point 2: " + p2.toString()+". Point 2 distance from origin: "+p2.distanceFromOrigin());       System.out.println("Point 3: " + p3.toString()+". Point 3 distance from origin: "+p3.distanceFromOrigin());                  // p. 580, #1      // print the quadrant each point lies in      System.out.println("\nPoint 1 lies in quadrant " + p1.quadrant()+ ".");      System.out.println("Point 2 lies in quadrant " + p2.quadrant()+ ".");      System.out.println("Point 3 lies in quadrant " + p3.quadrant()+ ".\n");            // p. 579, Self-Check #10        // print the distance between two points: p1 & p2      System.out.println("The distance between point 1 and point 2 is "+ p1.distance(p2));                              // p. 581, #3      // calculate and print the manhattan distance between two points: p1 & p2      System.out.println("The manhattan distance between point 1 and point 2 is "+ p1.manhattanDistance(p2));                        // p. 581, #4      // determines if the points (p2 & p3) line up vertically      if(p2.isVertical(p3)==true)         System.out.println("Points 2 and 3 line up verically.");      System.out.println("Points 2 and 3 do not line up vertically.");                        // p. 581, #5      // calculate the slope between the two points (p2 & p3)      System.out.println("The slope between points 2 and 3 is "+p2.slope(p3));                        // p. 581, #6      // determine if three points are collinear (p1, p2, p3)      if (p1.isCollinear(p2,p3)==true)         System.out.println();                              // translate each point to a new location      // p1 by (-11, 6); p2 by (1, -7); and p3 by (1, -1)             // print the points after translation                                    // p. 580, #1      // print the quadrant the translated points lie in                                     // p. 581, #2      // negate and flip the x & y coordiantes      // print the new points   }}